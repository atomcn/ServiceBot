from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import CommandStart, CommandHelp

from config import ADMIN_ID, MASTER_IDS
from keyboards.inline import get_service_keyboard # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥
from states.client_states import ClientForm # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞

async def cmd_start(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await state.finish() # –ó–∞–≤–µ—Ä—à–∞–µ–º –ª—é–±–æ–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    user_id = message.from_user.id
    full_name = message.from_user.full_name

    if user_id == ADMIN_ID:
        admin_start_text = (
            f"üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {full_name}!\n\n"
            "–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:\n\n"
            "üîπ **–ö–æ–º–∞–Ω–¥—ã –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:**\n"
            "   /requests - –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞—è–≤–æ–∫\n"
            "   /stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Ö–æ–¥–æ–≤ –∏ –∫–æ–º–∏—Å—Å–∏–∏\n"
            "   /masters - –°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤\n\n"
            "üî∏ **–î–µ–π—Å—Ç–≤–∏—è –ú–∞—Å—Ç–µ—Ä–∞ (–¥–æ—Å—Ç—É–ø–Ω—ã –≤–∞–º):**\n"
            "   –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∏–º–∞—Ç—å –∫–Ω–æ–ø–∫–∏ '‚úÖ –ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É' –∏ 'üèÅ –†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞' –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö –æ –∑–∞—è–≤–∫–∞—Ö. "
            "–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —ç—Ç–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω *–≤–∞—à* ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n\n"
            "‚ñ™Ô∏è **–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –°—Ü–µ–Ω–∞—Ä–∏–π:**\n"
            "   –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è *–æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π* –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏ (–≤—ã–±–æ—Ä —É—Å–ª—É–≥–∏, –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Ç.–¥.).\n\n"
            "‚ñ´Ô∏è **–û–±—â–∏–µ –ö–æ–º–∞–Ω–¥—ã:**\n"
            "   /start - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ (—Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è)\n"
            "   /help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        )
        await message.answer(admin_start_text, parse_mode='Markdown')
    elif user_id in MASTER_IDS:
        await message.answer(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ú–∞—Å—Ç–µ—Ä {full_name}!\n"
                             f"–í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö.\n"
                             f"–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /complete ID_–∑–∞—è–≤–∫–∏ (TODO)")
    else: # –û–±—ã—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç
        await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {full_name}!\n"
                             f"–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –±—ã—Ç–æ–≤—ã—Ö –∑–∞–¥–∞—á.\n"
                             f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å–ª—É–≥–∏, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:", reply_markup=get_service_keyboard())
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏
        await ClientForm.choosing_service.set()
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏ username –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        await state.update_data(client_id=user_id)
        await state.update_data(client_username=message.from_user.username or "N/A")


async def cmd_help(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    user_id = message.from_user.id
    help_text = "–û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n" \
                "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n" \
                "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"

    if user_id == ADMIN_ID:
        help_text += "–ö–æ–º–∞–Ω–¥—ã –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n" \
                     "/requests - –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫\n" \
                     "/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
    elif user_id in MASTER_IDS:
        help_text += "–ö–æ–º–∞–Ω–¥—ã –ú–∞—Å—Ç–µ—Ä–∞:\n" \
                     "–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö.\n" \
                     "–ö–Ω–æ–ø–∫–∞ '–†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞' –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–∫–∏ (TODO: –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞ /complete ID).\n\n" # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É
    else:
        help_text += "–î–ª—è –ö–ª–∏–µ–Ω—Ç–æ–≤:\n" \
                     "–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É.\n" \
                     "–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è."

    await message.answer(help_text)

# --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤ ---
def register_handlers_common(dp: Dispatcher):
    dp.register_message_handler(cmd_start, CommandStart(), state="*")
    dp.register_message_handler(cmd_help, CommandHelp(), state="*")