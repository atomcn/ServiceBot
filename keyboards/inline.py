from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData
from config import AVAILABLE_SERVICES

# --- CallbackData ---
service_cb = CallbackData("service", "id", "name") # –í—ã–±–æ—Ä —É—Å–ª—É–≥–∏
photo_action_cb = CallbackData("photo_act", "action") # –î–µ–π—Å—Ç–≤–∏—è —Å —Ñ–æ—Ç–æ (–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å/–¥–æ–±–∞–≤–∏—Ç—å)
request_action_cb = CallbackData("req_act", "action", "req_id") # –î–µ–π—Å—Ç–≤–∏—è —Å –∑–∞—è–≤–∫–æ–π (–ø—Ä–∏–Ω—è—Ç—å, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ)
confirm_cb = CallbackData("confirm", "action", "req_id") # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–º/–º–∞—Å—Ç–µ—Ä–æ–º (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
admin_action_cb = CallbackData("admin_act", "action", "req_id", "user_id") # –î–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞ (—Å–≤—è–∑–∞—Ç—å—Å—è)

# --- Client Keyboards ---
def get_service_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=2)
    for key, value in AVAILABLE_SERVICES.items():
        keyboard.insert(InlineKeyboardButton(text=value, callback_data=service_cb.new(id=key, name=value)))
    return keyboard

def get_photo_choice_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ", callback_data=photo_action_cb.new(action="skip")),
        # InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ", callback_data=photo_action_cb.new(action="add")) # –ö–Ω–æ–ø–∫–∞ "–¥–æ–±–∞–≤–∏—Ç—å" –æ–±—ã—á–Ω–æ –Ω–µ –Ω—É–∂–Ω–∞, —Ç.–∫. —é–∑–µ—Ä –ø—Ä–æ—Å—Ç–æ —à–ª–µ—Ç —Ñ–æ—Ç–æ
    )
    return keyboard

# --- Master Keyboards ---
def get_master_new_request_keyboard(request_id: str):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É", callback_data=request_action_cb.new(action="accept", req_id=request_id)))
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "–û—Ç–∫–ª–æ–Ω–∏—Ç—å", –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    # keyboard.add(InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=request_action_cb.new(action="reject", req_id=request_id)))
    return keyboard

def get_master_complete_request_keyboard(request_id: str):
     # –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä—É –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–∫–∏ –∏–ª–∏ –∫–∞–∫ –∫–æ–º–∞–Ω–¥–∞ /complete <request_id>
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("üèÅ –†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞", callback_data=request_action_cb.new(action="complete", req_id=request_id)))
    return keyboard

def get_master_skip_feedback_keyboard():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="skip_feedback"))
    return keyboard


# --- Admin Keyboards ---
def get_admin_master_report_keyboard(request_id: str, master_id: int):
     keyboard = InlineKeyboardMarkup(row_width=2)
     # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–≤—è–∑–∏ —Å –º–∞—Å—Ç–µ—Ä–æ–º
     keyboard.add(InlineKeyboardButton(f"üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–∞—Å—Ç–µ—Ä–æ–º", url=f"tg://user?id={master_id}"))
     # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞—è–≤–∫–∏ –≤ –±–æ—Ç–µ –∏–ª–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ
     # keyboard.add(InlineKeyboardButton(f"üìÑ –î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏ {request_id}", callback_data=admin_action_cb.new(action="view_req", req_id=request_id, user_id="")))
     # keyboard.add(InlineKeyboardButton(f"üìä –û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É", url=f"https://docs.google.com/spreadsheets/d/{GOOGLE_SHEET_ID}/edit")) # –ù—É–∂–µ–Ω GOOGLE_SHEET_ID –∏–∑ config
     return keyboard